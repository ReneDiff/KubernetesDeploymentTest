name: Build, Scan and Push Image

on:
  push:
    branches: [ "main" ]

jobs:
  build-scan-push:
    name: Build, Scan and Push
    runs-on: ubuntu-latest
    permissions:
      contents: read
      packages: write
      security-events: write

    steps:
      - name: Checkout application repository
        uses: actions/checkout@v4

      - name: Checkout VEX repository
        uses: actions/checkout@v4
        with:
          repository: ReneDiff/vex-hub 
          path: ./vex-data

      - name: Log in to GitHub Container Registry
        uses: docker/login-action@v3
        with:
          registry: ghcr.io
          username: ${{ github.actor }}
          password: ${{ secrets.GITHUB_TOKEN }}
      
      - name: Generate and build Docker image
        id: build_image
        run: |
          IMAGE_NAME=$(echo ghcr.io/${{ github.repository }}/min-nginx-app | tr '[:upper:]' '[:lower:]')
          echo "IMAGE_NAME_WITH_TAG=${IMAGE_NAME}:${{ github.sha }}" >> $GITHUB_OUTPUT
          docker build -t $IMAGE_NAME:${{ github.sha }} .

      - name: Install Trivy
        run: |
          curl -sfL https://raw.githubusercontent.com/aquasecurity/trivy/main/contrib/install.sh | sh -s -- -b /usr/local/bin v0.52.0

      - name: Scan image with Trivy using central VEX
        id: scan
        continue-on-error: true
        run: |
          trivy image \
            --format sarif \
            --output trivy-results.sarif \
            --severity HIGH,CRITICAL \
            --exit-code 1 \
            --vex ./vex-data/openvex.json \
            ${{ steps.build_image.outputs.IMAGE_NAME_WITH_TAG }}
      
      - name: Upload Trivy scan results to GitHub Security tab
        if: always()
        uses: github/codeql-action/upload-sarif@v3
        with:
          sarif_file: 'trivy-results.sarif'

      - name: Check scan outcome and fail job if needed
        if: steps.scan.outcome == 'failure'
        run: |
          echo "Trivy scan fandt kritiske s√•rbarheder. Byggeriet fejles."
          exit 1
          
      - name: Push Docker image to registry
        if: steps.scan.outcome == 'success'
        run: |
          echo "Scan var en succes. Pusher image til registry."
          docker push ${{ steps.build_image.outputs.IMAGE_NAME_WITH_TAG }}